<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
				http://www.springframework.org/schema/mvc 
				http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-3.1.xsd
				http://www.springframework.org/schema/jee 
				http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
				http://www.springframework.org/schema/task
				http://www.springframework.org/schema/task/spring-task-3.1.xsd
				http://www.springframework.org/schema/tx
				http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
				http://www.springframework.org/schema/util
				http://www.springframework.org/schema/util/spring-util-3.1.xsd">
     
	<!-- Indexing Tasks -->
	<task:annotation-driven />	
	
	<!-- enable annotation driven config -->
	<context:annotation-config />
	
	<!-- enable LTW -->
	<context:load-time-weaver />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven validator="validator"/>
	
	<!-- scan package for annotations configurations -->
	<context:component-scan base-package="com.monstersoftwarellc.springjpatemplate" />
	
	<!-- Maps '/' requests to the 'index' view -->
	<mvc:view-controller path="/" view-name="index" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
			p:prefix="/WEB-INF/views/"
			p:suffix=".jsp" /> 
	
	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
			p:basename="/WEB-INF/messages/messages"
			p:cacheSeconds="1" 
			p:defaultEncoding="UTF-8"/>
			
	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
			
	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
			p:defaultLocale="en" />
			
	<!-- JSR-303 - BeanValidation -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
    		p:validationMessageSource-ref="messageSource" />
	
	<!-- transaction management -->
	<tx:annotation-driven />	
	
	<!-- jpa properties -->
	<util:map id="jpaMap">
		<!-- need the deploy-on-startup so that the metamodel gets created before first use -->
	    <entry key="eclipselink.deploy-on-startup" value="true" />
		<entry key="eclipselink.ddl-generation" value="create-tables" />
		<entry key="eclipselink.weaving" value="true"/>
		<!-- <entry key="eclipselink.weaving.output.path" value="C:\\weavedClasses"/>
	    <entry key="eclipselink.weaving.overwrite.existing" value="true" /> -->
	    <entry key="eclipselink.logging.level" value="FINEST" />
	    <entry key="show-sql" value="true" />
	</util:map>
	
	<!-- EclipseLink vendor specific configurations -->
	<bean id="eclipseLinkVendor-SQL" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
			p:showSql="true" 
			p:generateDdl="false"
			p:databasePlatform="org.eclipse.persistence.platform.database.SQLServerPlatform"
			p:database="SQL_SERVER" />
				
	<!--<bean id="eclipseLinkVendor-MySQL" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
				p:showSql="true" 
				p:generateDdl="false"
				p:databasePlatform="org.eclipse.persistence.platform.database.MySQLPlatform"
				p:database="MYSQL"  /> -->			
	
	<!-- use JNDI for data source configuration -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/springjpatemplate" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"		
			p:dataSource-ref="dataSource"
			p:jpaVendorAdapter-ref="eclipseLinkVendor-SQL"
			p:jpaPropertyMap-ref="jpaMap"
			p:persistenceUnitName="springjpatemplate"
			p:packagesToScan="com.monstersoftwarellc.springjpatemplate" />	
 	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
			p:entityManagerFactory-ref="entityManagerFactory" />
	
	<bean id="defaultTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate"
		  	p:transactionManager-ref="transactionManager">
		  <qualifier value="defaultTransactionTemplate"/>
	</bean>

	<bean id="requireNewTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate"
		  	p:transactionManager-ref="transactionManager" 
		  	p:propagationBehaviorName="PROPAGATION_REQUIRES_NEW">
		  <qualifier value="requiresNewTransactionTemplate"/>
	</bean>				

</beans>